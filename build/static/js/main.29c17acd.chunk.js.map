{"version":3,"sources":["logo.svg","StartGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StartGame","props","reset","fetch","then","res","json","data","setState","playersTotal","playersCards","playersHand","dealersTotal","dealersCards","dealersHand","playerWins","dealerTakesCard","catch","err","console","log","stop","state","hitMe","deal","addCards","hand","id","cards","i","length","push","key","src","process","width","alt","banner","alert","Alert","color","PlayerCards","style","minHeight","this","DealerCards","Cards","marginTop","textShadow","Button","onClick","display","justifyContent","backgroundColor","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.29c17acd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Button, Alert } from \"reactstrap\";\r\n\r\n\r\nclass StartGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            playersTotal: 0,\r\n            playersCards: [],\r\n            dealersTotal: 0,\r\n            dealersCards: [],\r\n            playerWins: null,\r\n            dealerTakesCard: true,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/api/restart')\r\n\r\n\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                this.setState({ playersTotal: data.playersTotal });\r\n                this.setState({ playersCards: data.playersHand });\r\n                this.setState({ dealersTotal: data.dealersTotal });\r\n                this.setState({ dealersCards: data.dealersHand });\r\n                this.setState({ playerWins: data.playerWins });\r\n                this.setState({ dealerTakesCard: data.dealerTakesCard });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    reset = () => {\r\n        fetch('/api/restart')\r\n\r\n\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                this.setState({ playersTotal: data.playersTotal });\r\n                this.setState({ playersCards: data.playersHand });\r\n                this.setState({ dealersTotal: data.dealersTotal });\r\n                this.setState({ dealersCards: data.dealersHand });\r\n                this.setState({ playerWins: data.playerWins });\r\n                this.setState({ dealerTakesCard: data.dealerTakesCard });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    stop = () => {\r\n        fetch('/api/hitme/false')\r\n\r\n\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                this.setState({ playersTotal: data.playersTotal });\r\n                this.setState({ playersCards: data.playersHand });\r\n                this.setState({ dealersTotal: data.dealersTotal });\r\n                this.setState({ dealersCards: data.dealersHand });\r\n                this.setState({ playerWins: data.playerWins });\r\n                this.setState({ dealerTakesCard: data.dealerTakesCard });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        if (this.state.dealerTakesCard) {\r\n            this.stop()\r\n        }\r\n    }\r\n    hitMe = () => {\r\n        fetch('/api/hitme/true')\r\n\r\n\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                this.setState({ playersTotal: data.playersTotal });\r\n                this.setState({ playersCards: data.playersHand });\r\n                this.setState({ dealersTotal: data.dealersTotal });\r\n                this.setState({ dealersCards: data.dealersHand });\r\n                this.setState({ playerWins: data.playerWins });\r\n                this.setState({ dealerTakesCard: data.dealerTakesCard });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    deal = () => {\r\n        fetch('/api/deal')\r\n                \r\n            \r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                this.setState({ playersTotal: data.playersTotal });\r\n                this.setState({ playersCards: data.playersHand });\r\n                this.setState({ dealersTotal: data.dealersTotal });\r\n                this.setState({ dealersCards: data.dealersHand });\r\n                this.setState({ playerWins: data.playerWins });\r\n                this.setState({ dealerTakesCard: data.dealerTakesCard });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n \r\n    addCards = (hand, id) => {\r\n        let cards = [];\r\n        const imgUrl = '/images/';\r\n        const fileEnding = '.png';\r\n        for (let i = 0; i < hand.length; i++) {\r\n            cards.push(<img key={`${i}${id}`} src={`${process.env.PUBLIC_URL}/assets${imgUrl}${hand[i]}${fileEnding}`} width={50} alt={hand[i]}/>);\r\n        }\r\n        return cards\r\n    }\r\n\r\n    banner = (playerWins) => {\r\n        let alert;\r\n        if (playerWins === \"win\" || this.state.playersTotal === 21) {\r\n            alert = (<Alert color=\"success\">Congratulations!</Alert>);\r\n        } else if (playerWins === \"lost\") {\r\n            alert = (<Alert color=\"danger\">Better luck next time!</Alert>);\r\n        }\r\n        return alert;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const PlayerCards = (\r\n\r\n            <div style={{ minHeight: '240px' }}>\r\n                <h1>Players Cards</h1>\r\n                <h1>{this.state.playersTotal}</h1>\r\n                <br />\r\n                {this.addCards(this.state.playersCards, \"player\")}\r\n            </div>\r\n        )\r\n        const DealerCards = (\r\n            <div style={{ minHeight: '240px' }} >\r\n                <h1>Dealers Cards</h1>\r\n                <h1>{this.state.dealersTotal}</h1>\r\n                    <br />\r\n                    {this.addCards(this.state.dealersCards, \"dealer\")}\r\n                    </div>\r\n        )\r\n\r\n\r\n        const Cards = (\r\n\r\n            <div style={{ marginTop: '100px' }}><div style={{ textShadow: '1px 1px 1px #FFFFEE'}}>{PlayerCards} {DealerCards}</div>\r\n                <div><Button width={100} color=\"success\" onClick={this.deal}>Start</Button>\r\n                <Button width={100} color=\"primary\" onClick={this.hitMe}>Hit Me</Button>\r\n                <Button width={100} color=\"warning\" onClick={this.stop}>I'm Done</Button>\r\n                    <Button width={100} color=\"danger\" onClick={this.reset}>Restart</Button></div>\r\n                <br/>\r\n                <div>{this.banner(this.state.playerWins)}</div>\r\n            </div>\r\n            )\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', backgroundColor: 'green', minHeight: '800px' }}> {Cards} </div>\r\n        )\r\n\r\n    }\r\n};\r\n\r\nexport default StartGame;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport StartGame from './StartGame';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n      <StartGame />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}